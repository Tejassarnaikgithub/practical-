//SPDX-License-Identifier: MIT
pragma solidity >=0.7.0 <0.9.0;

contract banking{

   mapping(address=>uint) public user_account;
   mapping(address=>bool) public user_exists;

   function ceate_account()public payable returns(string memory){
       require (user_exists[msg.sender]==false,"Account already created");
       if(msg.value==0){
           user_account[msg.sender]=0;
           user_exists[msg.sender]=true;
           return "Account Created";
       }
       require(user_exists[msg.sender]==false,"Account already created");
           user_account[msg.sender]=msg.value;
           user_exists[msg.sender]=true;
           return "Account Created";
   }
   function deposit() public payable returns(string memory){
       require(user_exists[msg.sender]==true,"Account not Created");
       require(msg.value>0,"Value for deposit is zero");
       user_account[msg.sender]=user_account[msg.sender]+msg.value;
       return "Deposited Sucessfully";
   }
function withdrao(uint amount) public payable returns(string memory){
       require(user_account[msg.sender]>amount,"Insufficient Balance");
       require(user_exists[msg.sender]==true,"Account not created");
       require(amount>0,"Amount should be not zero");
       user_account[msg.sender]=user_account[msg.sender]-amount;
       payable(msg.sender).transfer(amount);
       return "Withdrawl Sucess";
   }

   function transfer(address payable userAddress,uint amount) public returns(string memory){
       require(user_account[msg.sender]>amount,"Insufficient balence in bank");
       require(user_exists[msg.sender]==true,"Account not created");
       require(user_exists[userAddress]==true,"Transfer account not exists");
       require(amount>0,"Account should not be 0");
       user_account[msg.sender]=user_account[msg.sender]-amount;
       user_account[userAddress]=user_account[userAddress]+amount;
       return "Transfer Sucess";
   }

   function send_amt(address payable toAddress, uint256 amount) public payable returns(string memory){
       require(user_account[msg.sender]>amount,"Insufficient balance in bank");
       require(user_exists[msg.sender]==true,"Account is not created");
       require(amount>0,"Account shoule not be 0");
       user_account[msg.sender]=user_account[msg.sender]-amount;
       toAddress.transfer(amount);
       return "Tramsfer sucess";
   }

   function user_bal()public view returns(uint){
       return user_account[msg.sender];
   }

   function account_exists()public view returns(bool){
       return user_exists[msg.sender];
   }

}
